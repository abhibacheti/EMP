AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Outputs the time
Resources:
  ExecutionPlanQueue:
    Type: AWS::SQS::Queue
    Properties:
      VisibilityTimeout: 60
      RedrivePolicy:
        deadLetterTargetArn: !Sub ${DeadLetterQueue.Arn}
        maxReceiveCount: 10
  DeadLetterQueue:
    Type: AWS::SQS::Queue
  SaveExeuctionPlanFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: dist/lambdas/
      Handler: saveExecutionPlanLambda.handler
      Runtime: nodejs10.x
      Role: !GetAtt SaveExeuctionPlanFunctionExecutionRole.Arn
      Timeout: 60
      MemorySize: 512
  SaveExeuctionPlanFunctionExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        - PolicyName: allowLambdaLogs
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - logs:*
                Resource: arn:aws:logs:*:*:*
        - PolicyName: allowSqs
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - sqs:ReceiveMessage
                  - sqs:DeleteMessage
                  - sqs:GetQueueAttributes
                  - sqs:ChangeMessageVisibility
                Resource: !GetAtt ExecutionPlanQueue.Arn
        - PolicyName: accessToDynamodb
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - dynamodb:*
                Resource: !GetAtt EmpTableg.Arn
  LambdaFunctionEventSourceMapping:
    Type: AWS::Lambda::EventSourceMapping
    Properties:
      BatchSize: 10
      Enabled: true
      EventSourceArn: !GetAtt ExecutionPlanQueue.Arn
      FunctionName: !GetAtt SaveExeuctionPlanFunction.Arn
  EventBridge:
    Type: AWS::Events::EventBus
    Properties:
      Name: "emp-eventbus"
  EventBridgeLambdaRule:
    Type: AWS::Events::Rule
    Properties:
      Description: "Only execution plan rule"
      EventBusName: "emp-eventbus"
      EventPattern: { "source": [ "data" ] }
      State: ENABLED
      Targets:
        - Arn: !GetAtt ExecutionPlanQueue.Arn
          Id: "SendToExecutionPlanQueue"
  EmpTable:
    Type: 'AWS::DynamoDB::Table'
    Properties:
      AttributeDefinitions:
        - AttributeName: 'id'
          AttributeType: 'S'
      KeySchema:
        - AttributeName: 'id'
          KeyType: 'HASH'
      ProvisionedThroughput:
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1
      TableName: EmpTable
